version: '3'
services:
  minio:
    image: quay.io/minio/minio:latest # we have to change to a specific version for production
    container_name: minio
    restart: always
    ports:
      - "9001:9000"  # API
      - "9002:9001"  # Console UI
    environment:
      MINIO_ROOT_USER: $MINIO_USER_NAME
      MINIO_ROOT_PASSWORD: $MINIO_USER_PASSWORD
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - minio-clickhouse-airflow

  clickhouse-server:
    image: altinity/clickhouse-server:24.8.14.10501.altinitystable-alpine #clickhouse/clickhouse-server:23.7.4.5-alpine #altinity/clickhouse-server:24.8.14.10501.altinitystable-alpine ## for Prod-ready or clickhouse/clickhouse-server:23.7.4.5-alpine most slightweight; altinity is more stable and i can use many useful features and analytics tools | pull from https://hub.docker.com/r/altinity/clickhouse-server/tags
    container_name: clickhousedb
    restart: always
    depends_on:
          - minio
    ports:
      - "8123:8123"  # Default HTTP port for ClickHouse (UI), airflow connection
      - "9000:9000"  # Default TCP port for ClickHouse, used by dbt-clickhouse
    # Set ClickHouse environment variables from .env file
    environment:
      - CLICKHOUSE_DB=$CLICKHOUSE_DB
      - CLICKHOUSE_USER=$CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD=$CLICKHOUSE_PASSWORD
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1  # Enable access management for users
    volumes:
      - clickhouse-altinity-data:/var/lib/clickhouse
    networks:
      - minio-clickhouse-airflow

  postgres:
    image: postgres:14
    environment:
        - POSTGRES_DB=db
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_USER=airflow
    volumes:
        - ./database/:/var/lib/postgresql/data
        - airflow-metadatabase:/var/lib/postgresql/data
    ports:
      - "5433:5432" # needed for checking tables from external tools like DBeaver
    healthcheck:
        test: ["CMD", "pg_isready -d db -U airflow"]
        interval: 5s
        retries: 5
    restart: always
    networks:
        - minio-clickhouse-airflow

  scheduler:
      build: .
      command: poetry run airflow scheduler
      restart: on-failure
      depends_on:
          - postgres
      environment:
          - AIRFLOW__CORE__EXECUTOR=LocalExecutor
          - AIRFLOW__DEBUG__FAIL_FAST=true
          - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
          - AIRFLOW__CORE__LOAD_EXAMPLES=false
          - AIRFLOW__WEBSERVER__WEB_SERVER_HOSTNAME=$AIRFLOW__WEBSERVER__WEB_SERVER_HOSTNAME
          - AIRFLOW__WEBSERVER__SECRET_KEY=$AIRFLOW__WEBSERVER__SECRET_KEY
          - CLICKHOUSE_DB=$CLICKHOUSE_DB
          - CLICKHOUSE_USER=$CLICKHOUSE_USER
          - CLICKHOUSE_PASSWORD=$CLICKHOUSE_PASSWORD
          - CLICKHOUSE_HOST=$CLICKHOUSE_HOST
          - CLICKHOUSE_HOST_IP=$CLICKHOUSE_HOST_IP
          - MINIO_USER_NAME=$MINIO_USER_NAME
          - MINIO_USER_PASSWORD=$MINIO_USER_PASSWORD
          - MINIO_HOST_IP=$MINIO_HOST_IP
          - MINIO_API_PORT=$MINIO_API_PORT
          - MINIO_HOST=$MINIO_HOST
          - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      volumes:
          - ./dags:/app/airflow/dags
          - ./logs:/app/airflow/logs
          - ./data:/app/airflow/data
          - ./airbyte:/app/airflow/airbyte
          - ./project_functions:/app/airflow/project_functions
          - ./dbt_project:/app/airflow/dbt_project

      tty: true
      stdin_open: true
      networks:
          - minio-clickhouse-airflow

  webserver:
      build: .
      command: poetry run scripts/entrypoint.sh
      restart: on-failure
      depends_on:
          - postgres
          - scheduler
      environment:
          - AIRFLOW__CORE__EXECUTOR=LocalExecutor
          - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
          - AIRFLOW__WEBSERVER__WEB_SERVER_HOSTNAME=$AIRFLOW__WEBSERVER__WEB_SERVER_HOSTNAME
          - AIRFLOW__WEBSERVER__SECRET_KEY=$AIRFLOW__WEBSERVER__SECRET_KEY
          - POSTGRES_DB=db
          - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
          - POSTGRES_USER=airflow
          - AIRFLOW__CORE__LOAD_EXAMPLES=false
          - AIRFLOW_ADMIN_EMAIL=$AIRFLOW_ADMIN_EMAIL
          - AIRFLOW_ADMIN_USERNAME=$AIRFLOW_ADMIN_USERNAME
          - AIRFLOW_ADMIN_PASSWORD=$AIRFLOW_ADMIN_PASSWORD
          - AIRFLOW_ADMIN_FIRST_NAME=$AIRFLOW_ADMIN_FIRST_NAME
          - AIRFLOW_ADMIN_LAST_NAME=$AIRFLOW_ADMIN_LAST_NAME
          - CLICKHOUSE_DB=$CLICKHOUSE_DB
          - CLICKHOUSE_USER=$CLICKHOUSE_USER
          - CLICKHOUSE_PASSWORD=$CLICKHOUSE_PASSWORD
          - CLICKHOUSE_HOST=$CLICKHOUSE_HOST
          - CLICKHOUSE_HOST_IP=$CLICKHOUSE_HOST_IP
          - MINIO_USER_NAME=$MINIO_USER_NAME
          - MINIO_USER_PASSWORD=$MINIO_USER_PASSWORD
          - MINIO_HOST_IP=$MINIO_HOST_IP    # IP for MinIO in airbyte network
          - MINIO_API_PORT=$MINIO_API_PORT
          - MINIO_HOST=$MINIO_HOST          # for internal docker network
          - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      volumes:
          - ./dags:/app/airflow/dags
          - ./logs:/app/airflow/logs
          - ./data:/app/airflow/data
          - ./airbyte:/app/airflow/airbyte
          - ./project_functions:/app/airflow/project_functions
          - ./dbt_project:/app/airflow/dbt_project
      ports:
          - "8080:8080"
      healthcheck:
          test: ["CMD-SHELL", "[ -f /home/airflow/airflow-webserver.pid ]"]
          interval: 30s
          timeout: 30s
          retries: 3
      tty: true
      stdin_open: true
      networks:
          - minio-clickhouse-airflow

  databaseapi:
    build:
      context: .
      dockerfile: Dockerfile_fastapi
    container_name: restful_api
    command: ["poetry", "run", "uvicorn", "weather_api.main:app", "--host", "0.0.0.0", "--port", "8005"]
    restart: always
    depends_on:
      - clickhouse-server
    ports:
      - "8005:8005"
    environment:
      - CLICKHOUSE_DATABASE_URL=$CLICKHOUSE_DATABASE_URL
    volumes:
      - ./weather_api:/app/weather_api
    networks:
      - minio-clickhouse-airflow


networks:
  minio-clickhouse-airflow:
    driver: bridge
    external: true

volumes:
  minio-data:
    external: true
  clickhouse-altinity-data:
    external: true
  airflow-metadatabase:
    external: true


# GOOD TO KNOW
# The need to explicitly define the hostname appeared with versions â‰¥ 2.5.0.
# The SECRET_KEY variable is recommended for security, but Airflow can work without it (it will generate one).
# environment:
#   AIRFLOW__WEBSERVER__WEB_SERVER_HOSTNAME=webserver
#   AIRFLOW__WEBSERVER__SECRET_KEY=super-secret-key-1234567890
